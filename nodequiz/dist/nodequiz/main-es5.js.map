{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/pages/cumulative-summary/cumulative-summary.component.html","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/login/login.component.html","./src/app/pages/not-found/not-found.component.html","./src/app/pages/presentation/presentation.component.html","./src/app/pages/quiz/quiz.component.html","./src/app/pages/results/results.component.html","./src/app/shared/auth-layout/auth-layout.component.html","./src/app/shared/base-layout/base-layout.component.html","./src/app/shared/header/header.component.html","./src/app/shared/quiz-summary-dialog/quiz-summary-dialog.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/pages/cumulative-summary/cumulative-summary.component.css","./src/app/pages/cumulative-summary/cumulative-summary.component.ts","./src/app/pages/dashboard/dashboard.component.css","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/login/login.component.css","./src/app/pages/login/login.component.ts","./src/app/pages/not-found/not-found.component.css","./src/app/pages/not-found/not-found.component.ts","./src/app/pages/presentation/presentation.component.css","./src/app/pages/presentation/presentation.component.ts","./src/app/pages/presentation/presentation.service.ts","./src/app/pages/quiz/quiz.component.css","./src/app/pages/quiz/quiz.component.ts","./src/app/pages/quiz/quiz.service.ts","./src/app/pages/results/results.component.css","./src/app/pages/results/results.component.ts","./src/app/shared/auth-layout/auth-layout.component.css","./src/app/shared/auth-layout/auth-layout.component.ts","./src/app/shared/base-layout/base-layout.component.css","./src/app/shared/base-layout/base-layout.component.ts","./src/app/shared/guards/auth.guard.ts","./src/app/shared/header/header.component.css","./src/app/shared/header/header.component.ts","./src/app/shared/index.ts","./src/app/shared/quiz-summary-dialog/quiz-summary-dialog.component.css","./src/app/shared/quiz-summary-dialog/quiz-summary-dialog.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;ACZA,qD;;;;;;;;;;;ACAA,wzB;;;;;;;;;;;ACAA,0CAA0C,iBAAiB,kBAAkB,+LAA+L,4BAA4B,cAAc,2KAA2K,cAAc,slB;;;;;;;;;;;ACA/e,gFAAgF,0BAA0B,2BAA2B,WAAW,wL;;;;;;;;;;;ACAhJ,sGAAsG,oBAAoB,4SAA4S,oBAAoB,GAAG,aAAa,0Q;;;;;;;;;;;ACA1c,iHAAiH,gBAAgB,gBAAgB,mFAAmF,sBAAsB,0CAA0C,aAAa,sUAAsU,keAAke,eAAe,gmBAAgmB,yLAAyL,cAAc,kBAAkB,aAAa,aAAa,6HAA6H,aAAa,m5B;;;;;;;;;;;ACArkE,mKAAmK,oBAAoB,iBAAiB,sBAAsB,iFAAiF,oBAAoB,uDAAuD,YAAY,sOAAsO,mBAAmB,2HAA2H,KAAK,mBAAmB,2JAA2J,KAAK,mBAAmB,6JAA6J,KAAK,mBAAmB,6JAA6J,KAAK,mBAAmB,+HAA+H,KAAK,mBAAmB,+SAA+S,mSAAmS,qBAAqB,yNAAyN,iDAAiD,oBAAoB,0BAA0B,wDAAwD,+CAA+C,mBAAmB,cAAc,oX;;;;;;;;;;;ACA7+E,oD;;;;;;;;;;;ACAA,uL;;;;;;;;;;;ACAA,+RAA+R,yoB;;;;;;;;;;;ACA/R,sD;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAEwC;AACF;AACU;AACI;AAKvD;IAEE,sBAAoB,MAAc,EAAU,aAA4B,EAAU,SAAoB;QAAlF,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,cAAS,GAAT,SAAS,CAAW;QADtG,UAAK,GAAG,qBAAqB,CAAC;QAE5B,IAAI,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QACrD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;SACrC;aAAM;YACL,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;SAClC;IACH,CAAC;;gBAR2B,sDAAM;gBAAyB,gEAAa;gBAAqB,mEAAS;;IAF3F,YAAY;QAJxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,QAAQ,EAAE,iCAAiC;SAC5C,CAAC;OACW,YAAY,CAWxB;IAAD,mBAAC;CAAA;AAXwB;;;;;;;;;;;;;ACbzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAEuD;AACqB;AACtC;AACC;AACK;AACmB;AACV;AACD;AACkB;AACvB;AACM;AACG;AAE3D,8CAA8C;AAEC;AACkC;AACN;AACZ;AACW;AAC2B;AACpB;AAC9B;AACK;AACD;AACW;AACC;AACgD;AAC/B;AACJ;AACb;AACP;AACJ;AACa;AACgC;AA+CrG;IAAA;IAAyB,CAAC;IAAb,SAAS;QA7CrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,8FAAmB;gBACnB,wFAAkB;gBAClB,4EAAc;gBACd,uFAAiB;gBACjB,kHAA0B;gBAC1B,8FAAmB;gBACnB,iGAAqB;gBACrB,gFAAe;gBACf,yEAAa;gBACb,kFAAgB;gBAChB,qHAA0B;aAC3B;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,4FAAuB;gBACvB,sEAAgB;gBAChB,qEAAgB;gBAChB,0DAAW;gBACX,4DAAY,CAAC,OAAO,CAAC,sDAAS,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,aAAa,EAAE,KAAK,EAAE,CAAC;gBACxE,kEAAmB;gBACnB,kEAAe;gBACf,yEAAe;gBACf,gEAAa;gBACb,gEAAa;gBACb,mEAAgB;gBAChB,qEAAa;gBACb,gFAAkB;gBAClB,iEAAc;gBACd,gEAAa;gBACb,iEAAc;gBACd,gEAAc;gBACd,sEAAiB;aAClB;YACD,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,gEAAgB,EAAE,QAAQ,EAAE,oEAAoB,EAAE;gBAC7D,iEAAa;gBACb,mEAAS,EAAE,6FAAmB;gBAC9B,qEAAW;aAAC;YACd,SAAS,EAAE,CAAC,4DAAY,CAAC;YACzB,eAAe,EAAE,CAAC,qHAA0B,CAAC;SAE9C,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACtFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;AAG8E;AAClB;AACW;AACC;AACM;AAC1B;AAC8C;AACjB;AACxB;AACS;AAE9D,IAAM,SAAS,GAAW;IAC/B;QACE,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6FAAmB;QAC9B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,EAAE;gBACR,SAAS,EAAE,uFAAkB;gBAC7B,WAAW,EAAE,CAAC,mEAAS,CAAC;aACzB;YACD;gBACE,IAAI,EAAE,cAAc;gBACpB,SAAS,EAAE,gGAAqB;gBAChC,WAAW,EAAE,CAAC,mEAAS,CAAC;aACzB;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,SAAS,EAAE,wEAAa;gBACxB,WAAW,EAAE,CAAC,mEAAS,CAAC;aACzB;YACD;gBACE,IAAI,EAAE,aAAa;gBACnB,SAAS,EAAE,iFAAgB;gBAC3B,WAAW,EAAE,CAAC,mEAAS,CAAC;aACzB;YACD;gBACE,IAAI,EAAE,oBAAoB;gBAC1B,SAAS,EAAE,iHAA0B;gBACrC,WAAW,EAAE,CAAC,mEAAS,CAAC;aACzB;SACF;KACF;IACD;QACE,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,6FAAmB;QAC9B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,OAAO;gBACb,SAAS,EAAE,2EAAc;aAC1B;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAE,sFAAiB;aAC7B;SACF;KACF;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,mBAAmB;KAChC;CACF,CAAC;;;;;;;;;;;;ACnEF,+DAA+D,mL;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,6CAAQ,GAAR;IACA,CAAC;IALU,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,8LAAkD;;SAEnD,CAAC;OACW,0BAA0B,CAOtC;IAAD,iCAAC;CAAA;AAPsC;;;;;;;;;;;;ACPvC,wBAAwB,aAAa,UAAU,wBAAwB,2BAA2B,oBAAoB,KAAK,8EAA8E,+BAA+B,2BAA2B,mBAAmB,KAAK,mBAAmB,mBAAmB,KAAK,gBAAgB,iBAAiB,OAAO,WAAW,8BAA8B,iCAAiC,qCAAqC,GAAG,6CAA6C,ujC;;;;;;;;;;;;ACA7gB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAE+C;AACT;AACU;AAQnD;IAIE,4BAAoB,MAAc,EAAU,MAAqB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEtE,6CAAgB,GAAhB,UAAiB,gBAAgB;QAC/B,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,2BAA2B,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;QACjE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACvE,CAAC;IACD,qCAAQ,GAAR;IACA,CAAC;;gBAR2B,sDAAM;gBAAkB,gEAAa;;IAJtD,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mKAAyC;;SAE1C,CAAC;OAEW,kBAAkB,CAa9B;IAAD,yBAAC;CAAA;AAb8B;;;;;;;;;;;;ACf/B,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;ACA/D;;;GAGG;AACgD;AACO;AACU;AAC3B;AACS;AAOlD;IAQE,wBAAoB,MAAc,EAAU,aAA4B,EAAU,EAAe,EAAU,IAAgB;QAAvG,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,OAAE,GAAF,EAAE,CAAa;QAAU,SAAI,GAAJ,IAAI,CAAY;QAH3H,gBAAW,GAAG,SAAS,CAAC;IAIxB,CAAC;;;;;;;;;;;QAWG;IAEJ,iCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACxB,UAAU,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;SAE9F,CAAC,CAAC;IACL,CAAC;IAED,8BAAK,GAAL;QAAA,iBA8BC;QA7BC,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC;QAC1D,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAC5B;;;;;;;;;;;WAWG;QAGC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,UAAU,CAAC,CAAC,SAAS,CAAC,aAAG;YACzD,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,iBAAiB,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;gBACrD,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,EAAE,CAAC,CAAC;gBACnD,KAAI,CAAC,WAAW,GAAG,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC;gBACvD,sEAAsE;gBACvE,kDAAkD;gBACjD,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;aACtC;iBAAM;gBACL,KAAI,CAAC,YAAY,GAAG,4BAA4B,CAAC;aAClD;QACH,CAAC,CACA;IACH,CAAC;;gBAnD2B,sDAAM;gBAAyB,gEAAa;gBAAc,0DAAW;gBAAgB,+DAAU;;IARhH,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,uJAAqC;;SAEtC,CAAC;OACW,cAAc,CA4D1B;IAAD,qBAAC;CAAA;AA5D0B;;;;;;;;;;;;ACf3B,+DAA+D,2J;;;;;;;;;;;;ACA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAEgD;AACD;AACP;AAO3C;IAEE,2BAAoB,KAAqB,EAAU,QAAkB;QAAjD,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE1E,oCAAQ,GAAR;IACA,CAAC;IAED,kCAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;gBAP0B,8DAAc;gBAAoB,wDAAQ;;IAF1D,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,mKAAyC;;SAE1C,CAAC;OACW,iBAAiB,CAW7B;IAAD,wBAAC;CAAA;AAX6B;;;;;;;;;;;;ACd9B,yBAAyB,8BAA8B,iCAAiC,qCAAqC,GAAG,6CAA6C,+d;;;;;;;;;;;;ACA7K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAEgD;AACD;AACD;AACY;AACpB;AAOzC;IAOE,+BAAoB,KAAqB,EAAU,IAAgB,EAC/C,mBAAwC,EAAU,MAAc;QADpF,iBAUC;QAVmB,UAAK,GAAL,KAAK,CAAgB;QAAU,SAAI,GAAJ,IAAI,CAAY;QAC/C,wBAAmB,GAAnB,mBAAmB,CAAqB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAClF,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE;aAC1C,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YAChC,KAAI,CAAC,MAAM,GAAG,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,KAAI,CAAC,gBAAgB,EAAhC,CAAgC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;YACzF,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IACD,wCAAQ,GAAR,UAAS,MAAM;QACb,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,uBAAuB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,wCAAQ,GAAR;IAEA,CAAC;;gBApB0B,8DAAc;gBAAgB,+DAAU;gBAC1B,yEAAmB;gBAAkB,sDAAM;;IARzE,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,4KAA4C;;SAE7C,CAAC;OACW,qBAAqB,CA6BjC;IAAD,4BAAC;CAAA;AA7BiC;;;;;;;;;;;;;ACflC;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAEyC;AACM;AAKlD;IAMA,6BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAElC,CAAC;IAED,8CAAgB,GAAhB;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,6BAA6B,CAAC,CAAC;IACtD,CAAC;;gBANuB,+DAAU;;IANvB,mBAAmB;QAH/B,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;OACW,mBAAmB,CAa/B;IAAD,0BAAC;CAAA;AAb+B;;;;;;;;;;;;ACZhC,wCAAwC,0BAA0B,GAAG,WAAW,6BAA6B,oCAAoC,iCAAiC,KAAK,6CAA6C,+hB;;;;;;;;;;;;ACApO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAE+C;AACA;AACO;AACZ;AAGQ;AACV;AACQ;AAGD;AAOlD;IAgBE,uBAAoB,KAAqB,EAAU,aAA4B,EAAU,QAAkB,EAAU,MAAiB,EAAU,IAAgB,EAAU,WAAwB,EAAU,MAAc;QAA1N,iBAoBC;QApBmB,UAAK,GAAL,KAAK,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAe;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAW;QAAU,SAAI,GAAJ,IAAI,CAAY;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAP1N,MAAC,GAAQ,EAAE,CAAC;QACZ,OAAE,GAAQ,EAAE,CAAC;QAOX,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5D,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAChE,yDAAyD;QACzD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC;QAIjD,yDAAyD;QAEzD,uEAAuE;QAEvE,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,aAAG;YACzC,KAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,IAAI,KAAK,KAAI,CAAC,MAAM,EAAtB,CAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YAC/E,+FAA+F;YAE/F,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;IACD,gCAAQ,GAAR;IAEA,CAAC;IACD,gCAAQ,GAAR,UAAS,IAAI;QAAb,iBAkEC;QAhEC,mBAAmB;QACnB,IAAM,mBAAmB,GAAG,GAAG,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,KAAK,KAAI,CAAC,MAAM,EAApB,CAAoB,CAAC,CAAC;QAC3D,IAAM,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC1C,IAAI,kBAAkB,GAAG,mBAAmB,GAAG,aAAa,CAAC;QAC7D,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,6BAA6B;QAC7B,IAAI,mBAAmB,GAAG,CAAC,CAAC;QAC5B,IAAI,iBAAiB,GAAG,EAAE,CAAC;QAC3B,IAAI,qBAAqB,GAAG,EAAE,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;QAEpC,OAAO;QAEP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACjD,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC;QAG5B,gCAAgC;QAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YAC9B,UAAU,EAAE,IAAI,CAAC,UAAU;YAC3B,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;SAC9B,CAAC,CAAC,SAAS,CAAC,aAAG;QAChB,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAC;QAEjC,CAAC,EAAE;YACD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC7B,KAAK,IAAM,IAAI,IAAI,KAAI,CAAC,WAAW,EAAE;gBACnC,IAAI,KAAI,CAAC,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE;oBACzC,IAAI,IAAI,KAAK,YAAY,IAAI,IAAI,KAAK,QAAQ,EAAE;wBAC9C,iBAAiB,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC7D,qBAAqB,CAAC,IAAI,CAAC,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;qBAClE;iBACF;aAEF;QACH,CAAC,CAAC,CAAC;QACH,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,+DAAgB,EAAE;YACnD,IAAI,EAAE,EAEL;SACF,CAAC;QAEF;;;;;;;;;;;;;;;YAeI;IACN,CAAC;IACD,8BAAM,GAAN;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;;gBA7F0B,8DAAc;gBAAyB,gEAAa;gBAAoB,wDAAQ;gBAAkB,kEAAS;gBAAgB,+DAAU;gBAAuB,yDAAW;gBAAkB,sDAAM;;IAhB/M,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,oJAAoC;;SAErC,CAAC;OACW,aAAa,CA8GzB;IAAD,oBAAC;CAAA;AA9GyB;;;;;;;;;;;;;ACtB1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAEyC;AACM;AACT;AAKzC;IAUE,qBAAoB,IAAgB,EAAU,MAAc;QAAxC,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC5D,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;YAC7B,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE;YAC/B,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE;SAC1B;IACH,CAAC;IACD,8BAAQ,GAAR;IAEA,CAAC;IACC,gCAAU,GAAV;QACE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;IAClD,CAAC;IAED,iCAAW,GAAX,UAAY,EAAE;QACZ,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,GAAG,EAAE,CAAC,CAAC;IAC7C,CAAC;;gBAhByB,+DAAU;gBAAkB,sDAAM;;IAVjD,WAAW;QAHvB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;OACW,WAAW,CAuCvB;IAAD,kBAAC;CAAA;AAvCuB;;;;;;;;;;;;ACbxB,+DAA+D,uJ;;;;;;;;;;;;ACA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAEsD;AAEhB;AACyB;AACf;AAOnD;IAGE,uBAAuB;IAEvB,0BACU,SAAsC,EAAU,MAAc,EAAU,aAA4B;QAApG,cAAS,GAAT,SAAS,CAA6B;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;QAC5G,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACvD,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,mBAAmB,CAAC;IAEpD,CAAC;IAID,mCAAQ,GAAR;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;;gBAVoB,8DAAY;gBAAiC,sDAAM;gBAAyB,gEAAa;;IAMrG;QAAR,2DAAK,EAAE;yDAAoB;IAZjB,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,sKAAgD;;SAEjD,CAAC;OACW,gBAAgB,CAiB5B;IAAD,uBAAC;CAAA;AAjB4B;;;;;;;;;;;;AChB7B,+DAA+D,mK;;;;;;;;;;;;;;;;;ACAb;AAOlD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,0KAA2C;;SAE5C,CAAC;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;ACPhC,+DAA+D,mK;;;;;;;;;;;;ACC/D;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAEgD;AAOnD;IAEE;IAAgB,CAAC;IAEjB,sCAAQ,GAAR;IACA,CAAC;IALU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,0KAA2C;;SAE5C,CAAC;OACW,mBAAmB,CAO/B;IAAD,0BAAC;CAAA;AAP+B;;;;;;;;;;;;;ACbhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;;AAEyC;AACuD;AAChD;AAKnD;IAEE,mBAAoB,MAAc,EAAU,aAA4B;QAApD,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAe;IAAI,CAAC;IAE7E,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QAEnE,IAAM,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;QAElE,IAAI,eAAe,EAAE;YACnB,OAAO,IAAI,CAAC;SACb;aAAM;YACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACzC,OAAO,KAAK,CAAC;SACd;IACH,CAAC;;gBAZ2B,sDAAM;gBAAyB,gEAAa;;IAF7D,SAAS;QAHrB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OACW,SAAS,CAerB;IAAD,gBAAC;CAAA;AAfqB;;;;;;;;;;;;ACZtB,+DAA+D,uJ;;;;;;;;;;;;;;;;;;;ACA/D;;;GAGG;AACgD;AACV;AACU;AAMnD;IAEE,yBAAoB,MAAc,EAAU,MAAqB;QAA7C,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAe;IAAI,CAAC;IAEtE,gCAAM,GAAN;QACE,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAC3C,CAAC;IACD,kCAAQ,GAAR;IACA,CAAC;IACD,iCAAO,GAAP;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACvC,CAAC;;gBAX2B,sDAAM;gBAAkB,gEAAa;;IAFtD,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,2JAAsC;;SAEvC,CAAC;OACW,eAAe,CAc3B;IAAD,sBAAC;CAAA;AAd2B;;;;;;;;;;;;;ACZ5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;GAGG;AAEiD;AACA;AACK;AACR;AAC0B;AAClB;AACJ;;;;;;;;;;;;ACXrD,+DAA+D,uL;;;;;;;;;;;;;;;;;;;ACAP;AACe;AACtB;AAMjD;IAOE,oCAAoB,SAAmD,EAC5C,IAAI,EAAU,aAA4B;QADjD,cAAS,GAAT,SAAS,CAA0C;QAC9B,kBAAa,GAAb,aAAa,CAAe;QACnE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC;QACtD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC;QACxD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;IACzD,CAAC;IAED,6CAAQ,GAAR;IACA,CAAC;;gBAV8B,qEAAY;gDACxC,oDAAM,SAAC,wEAAe;gBAA+B,gEAAa;;IAR1D,0BAA0B;QALtC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,kMAAmD;;SAEpD,CAAC;QASG,6GAAM,CAAC,wEAAe,CAAC;OARf,0BAA0B,CAmBtC;IAAD,iCAAC;CAAA;AAnBsC;;;;;;;;;;;;;ACRvC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkB;AAClB;;;GAGG;AAE6C;AAC2B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<p>cumulative-summary works!</p>\\n\"","module.exports = \"<mat-card-title>Welcome to Node Quiz!</mat-card-title>\\n\\n<div class=\\\"row\\\">\\n    <div class=\\\"column\\\">\\n        <img src=\\\"assets/slides/html-css/Slide1.jpeg\\\" alt=\\\"HTML\\\" style=\\\"width:100%\\\">\\n        <button color=\\\"accent\\\" mat-button (click)=\\\"goToPresentation('html-css')\\\">Learn HTML/CSS</button>\\n    </div>\\n    <div class=\\\"column\\\">\\n        <img src=\\\"assets/slides/javascript/Slide1.jpeg\\\" alt=\\\"Java\\\" style=\\\"width:100%\\\">\\n        <button color=\\\"accent\\\" mat-button (click)=\\\"goToPresentation('javascript')\\\">Learn Javascript</button>\\n    </div>\\n    <div class=\\\"column\\\">\\n        <img src=\\\"assets/slides/node/Slide1.jpeg\\\" alt=\\\"node\\\" style=\\\"width:100%\\\">\\n        <button color=\\\"accent\\\" mat-button (click)=\\\"goToPresentation('node')\\\">Learn Node</button>\\n    </div>\\n</div>\"","module.exports = \"<div style=\\\"width: 50%; margin-top: 12%; margin-left: 20%;\\\" fxLayout=\\\"column\\\">\\n    <mat-card class=\\\"mat-elevation-z8\\\">\\n        <mat-card-title>Login Here</mat-card-title>\\n        <mat-card-content>\\n            <small style=\\\"color: #df546a;\\\" *ngIf=\\\"errorMessage\\\">{{errorMessage}}<br/></small>\\n            <mat-card class=\\\"mat-evevation-z0\\\" fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n                <form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"login(); form.reset();\\\" #loginForm=\\\"ngForm\\\">\\n                    <mat-card-content>\\n                        <mat-form-field>\\n                            <input type=\\\"text\\\" matInput [formControl]=\\\"form.controls['employeeId']\\\" fxFlex>\\n                        </mat-form-field>\\n                    </mat-card-content>\\n                    <mat-card-actions>\\n                        <button type=\\\"submit\\\" fxFlex mat-raised-button color=\\\"primary\\\">Submit</button>\\n                    </mat-card-actions>\\n                </form>\\n            </mat-card>\\n        </mat-card-content>\\n    </mat-card>\\n</div>\"","module.exports = \"<!doctype html>\\n<html>\\n\\n<head>\\n    <style>\\n        html {\\n            width: 100%;\\n            height: 100%;\\n        }\\n    </style>\\n</head>\\n\\n<body>\\n\\n    <h1>404</h1>\\n    <h4>Are you lost?</h4>\\n\\n    <button color=\\\"accent\\\" mat-button (click)=\\\"goBack()\\\">Back</button>\\n\\n\\n</body>\\n\\n</html>\"","module.exports = \"<div fxLayout=\\\"column\\\" *ngIf=\\\"images\\\">\\n    <mat-card>\\n      <mat-card-title>{{ presentationName }}</mat-card-title>\\n      <mat-card-content>\\n        <p-carousel [value]=\\\"images\\\" numVisible=\\\"1\\\">\\n          <ng-template let-item pTemplate=\\\"item\\\">\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\">\\n              <div fxFlex>\\n                <img src=\\\"./assets/slides/{{ presentationName }}/{{ item.name }}.jpeg\\\" alt=\\\"\\\">\\n              </div>\\n            </div>\\n          </ng-template>\\n        </p-carousel>\\n      </mat-card-content>\\n    </mat-card>\\n  </div>\\n  <button color=\\\"accent\\\" mat-button (click)=\\\"goToQuiz(presentationName)\\\">Begin Quiz here</button>\"","module.exports = \"<div fxLayout=\\\"column\\\">\\n    <!-- root mat card -->\\n    <mat-card fxFlex style=\\\"width: 50%; margin: 0 auto; margin-top: 5%;\\\" class=\\\"mat-elevation-z8\\\">\\n        <mat-card-title style=\\\"text-align: center; font-weight: lighter;\\\" class=\\\"mat-headline\\\">\\n            {{ quiz.name }}\\n        </mat-card-title>\\n\\n        <br />\\n        <!-- root mat card content -->\\n        <mat-card-content *ngIf=\\\"questions\\\">\\n            <!-- flex-layout column -->\\n            <div fxLayout=\\\"column\\\">\\n\\n                <!-- Quiz form -->\\n                <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form.value); \\\">\\n                    <div *ngFor=\\\"let question of questions\\\">\\n                        <mat-card class=\\\"mat-elevation-z0\\\">\\n                            <mat-card-content>\\n\\n                                <div fxLayout=\\\"column\\\">\\n                                    <!-- questions -->\\n                                    <mat-list>\\n                                        <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n\\n                                            <p>{{question.text}}</p>\\n                                        </div>\\n                                    </mat-list>\\n                                    <br />\\n\\n                                    <!-- answers -->\\n                                    <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n                                        <label>Answers:</label>\\n                                        <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n                                            <div *ngFor=\\\"let answer of question.answers\\\"\\n                                                style=\\\"flex-direction: column;\\\">\\n                                                <input [(ngModel)]=\\\"qs[question.id]\\\" [checked]=\\\"qs[question.id]\\\"\\n                                                    value=\\\"{{answer.id}};{{answer.isCorrect}}\\\" name=\\\"q{{question.id}}\\\"\\n                                                    type=\\\"radio\\\" />\\n                                                {{answer.text}}\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </mat-card-content>\\n                        </mat-card>\\n                    </div>\\n\\n                    <!-- mat card actions -->\\n                    <br />\\n                    <mat-card-actions>\\n                        <button type=\\\"submit\\\" fxFlex mat-raised-button color=\\\"primary\\\">Submit</button>\\n                    </mat-card-actions>\\n                    <br />\\n                </form>\\n                <!-- end form -->\\n\\n            </div>\\n            <!-- end flex-layout column -->\\n        </mat-card-content>\\n        <!-- end root mat card content -->\\n    </mat-card>\\n\\n    <div>\\n        <button color=\\\"accent\\\" mat-button (click)=\\\"goBack()\\\">Back</button>\\n    </div>\"","module.exports = \"<mat-dialog-content>\\n  <div fxLayout=\\\"column\\\">\\n    <mat-card class=\\\"mat-elevation-z0\\\">\\n      <mat-card-title style=\\\"font-weight: lighter; text-align: center;\\\">\\n          {{quizSummary.quizName}}\\n      </mat-card-title>\\n      <mat-card-subtitle style=\\\"font-weight: lighter; text-align: center;\\\">\\n          Displaying Quiz Results for Employee: {{employeeId}}\\n      </mat-card-subtitle>\\n      <br />\\n      <mat-card-content>\\n        <mat-card class=\\\"mat-elevation-z8\\\">\\n          <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\">\\n            <mat-card-title style=\\\"text-align: center; font-weight: bold;\\\">\\n              Score\\n              <div *ngIf=\\\"quizSummary.score > 90\\\">\\n                <span style=\\\"color: green;\\\">{{quizSummary.score}}%</span>\\n              </div>\\n              <div *ngIf=\\\"quizSummary.score < 90 && quizSummary.score >= 80\\\">\\n                <span style=\\\"color: blue;\\\">{{quizSummary.score}}%</span>\\n              </div>\\n              <div *ngIf=\\\"quizSummary.score < 80 && quizSummary.score >= 70\\\">\\n                <span style=\\\"color: orange;\\\">{{quizSummary.score}}%</span>\\n              </div>\\n              <div *ngIf=\\\"quizSummary.score < 70 && quizSummary.score >= 60\\\">\\n                <span style=\\\"color: yellow;\\\">{{quizSummary.score}}%</span>\\n              </div>\\n              <div *ngIf=\\\"quizSummary.score < 60\\\">\\n                <span style=\\\"color: red;\\\">{{quizSummary.score}}%</span>\\n              </div>\\n            </mat-card-title>\\n          </div>\\n        </mat-card>\\n          \\n        <br />\\n        <mat-card class=\\\"mat-elevation-z0\\\">\\n          <mat-card-content>\\n            <div fxLayout=\\\"column\\\" fxLayoutGap=\\\"10px\\\" *ngFor=\\\"let answer of correctAnswers; let i = index\\\">\\n              <div *ngIf=\\\"selectedAnswers[i].answerId !== answer.answerId\\\">\\n\\n                <!-- questions -->\\n                <mat-list>\\n                  <div fxLayout=\\\"row\\\" fxLayoutGap=\\\"10px\\\">\\n                    <p>Question: </p>\\n                    <p>{{answer.questionText}}</p>\\n                  </div>\\n                </mat-list>\\n                <br />\\n\\n                <!-- answer summary -->\\n                <label>Answers:</label>\\n                <p><mat-icon style=\\\"color: red; vertical-align: bottom\\\">clear</mat-icon> &nbsp; Selected answer: {{ selectedAnswers[i].text}}</p>\\n                <p><mat-icon style=\\\"color: green; vertical-align: bottom\\\">done</mat-icon>&nbsp; Correct answer: {{ answer.text}}</p>\\n              </div>\\n            </div>    \\n          </mat-card-content>\\n              \\n        </mat-card>  \\n        \\n      </mat-card-content>\\n      <mat-card-actions align=\\\"end\\\">\\n        <button mat-raised-button matDialogClose=\\\"confirm\\\" color=\\\"primary\\\">Confirm</button>\\n      </mat-card-actions>\\n    </mat-card>\\n  </div>\\n</mat-dialog-content>\"","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"<div>\\n    <!-- Page header -->\\n<app-header></app-header>\\n    <!-- Main page content -->\\n    <main>\\n        <router-outlet></router-outlet>\\n    </main>\\n</div>\"","module.exports = \"<mat-toolbar class=\\\"menu\\\" role=\\\"header\\\" color=\\\"primary\\\">\\n    <mat-toolbar-row>\\n        <mat-icon>computer</mat-icon>\\n        <button mat-button class=\\\"toolbar__icon-button mat-button\\\" (click)=\\\"navHome()\\\">\\n        <span style=\\\"margin-left: 5px !important;\\\">Node Quiz</span>\\n        </button>\\n        <div fxFlex></div>\\n\\n        <!-- User Profile -->\\n        <button [matMenuTriggerFor]=\\\"menu\\\" mat-icon-button>\\n            <mat-icon>account_circle</mat-icon>\\n        </button>\\n        <mat-menu #menu=\\\"matMenu\\\">\\n            <button mat-menu-item>\\n                <mat-icon>library_books</mat-icon>\\n                <span>My Results</span>\\n            </button>\\n            <button mat-menu-item (click)=\\\"logout()\\\">\\n                <mat-icon>exit_to_app</mat-icon>\\n                <span>Logout</span>\\n            </button>\\n        </mat-menu>\\n    </mat-toolbar-row>\\n</mat-toolbar>\"","module.exports = \"<p>quiz-summary-dialog works!</p>\\n\"","/**\n * Author: Lea Trueworthy\n * Description: app.component\n */\n\n import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { AuthGuard } from './shared/guards/auth.guard';\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent {\n  title = \"Trueworthy NodeQuiz\";\n  constructor(private router: Router, private cookieService: CookieService, private authGuard: AuthGuard) {\n    let test = this.cookieService.get('isAuthenticated');\n    console.log(test);\n    if (!test) {\n      router.navigate(['/session/login']);\n    } else {\n      router.navigate([\"/dashboard/\"]);\n    }\n  }\n}","/**\n * Author: Lea Trueworthy\n * Description: app.module: elements for whole website\n */\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { AppRoutes } from './app.routing';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { AuthGuard } from './shared/guards/auth.guard';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nimport { CarouselModule } from 'primeng/carousel';\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n//import {ButtonModule} from 'primeng/button';\n\nimport { AppComponent } from './app.component';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { CumulativeSummaryComponent } from './pages/cumulative-summary/cumulative-summary.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule, MatRadioModule } from '@angular/material';\nimport { MatButtonModule, MatIconModule, MatMenuModule, MatToolbarModule, MatListModule } from '@angular/material';\nimport { PresentationComponent } from './pages/presentation/presentation.component';\nimport { PresentationService } from './pages/presentation/presentation.service';\nimport { HeaderComponent } from './shared/header/header.component';\nimport { QuizComponent } from './pages/quiz/quiz.component';\nimport { QuizService } from './pages/quiz/quiz.service';\nimport { ResultsComponent } from './pages/results/results.component';\nimport {QuizSummaryDialogComponent} from './shared/quiz-summary-dialog/quiz-summary-dialog.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BaseLayoutComponent,\n    DashboardComponent,\n    LoginComponent,\n    NotFoundComponent,\n    CumulativeSummaryComponent,\n    AuthLayoutComponent,\n    PresentationComponent,\n    HeaderComponent,\n    QuizComponent,\n    ResultsComponent,\n    QuizSummaryDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    FormsModule,\n    RouterModule.forRoot(AppRoutes, { useHash: true, enableTracing: false }),\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatIconModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatListModule,\n    MatRadioModule,\n    CarouselModule,\n    RadioButtonModule\n  ],\n  providers: [\n    { provide: LocationStrategy, useClass: HashLocationStrategy },\n    CookieService,\n    AuthGuard, PresentationService,\n    QuizService],\n  bootstrap: [AppComponent],\n  entryComponents: [QuizSummaryDialogComponent]\n\n})\nexport class AppModule { }","/**\n * Author: Lea Trueworthy\n * Description: routing for website to each page\n */\n\nimport { Routes } from '@angular/router';\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\nimport { DashboardComponent } from './pages/dashboard/dashboard.component';\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\nimport { AuthGuard } from './shared/guards/auth.guard';\nimport { CumulativeSummaryComponent } from './pages/cumulative-summary/cumulative-summary.component';\nimport { PresentationComponent } from './pages/presentation/presentation.component';\nimport { QuizComponent } from './pages/quiz/quiz.component';\nimport { ResultsComponent } from './pages/results/results.component';\n\nexport const AppRoutes: Routes = [\n  {\n    path: 'dashboard',\n    component: BaseLayoutComponent,\n    children: [\n      {\n        path: '',\n        component: DashboardComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'slides/:name',\n        component: PresentationComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'questions/:id',\n        component: QuizComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'results/:id',\n        component: ResultsComponent,\n        canActivate: [AuthGuard]\n      },\n      {\n        path: 'cumulative-summary',\n        component: CumulativeSummaryComponent,\n        canActivate: [AuthGuard]\n      }\n    ]\n  },\n  {\n    path: 'session',\n    component: AuthLayoutComponent,\n    children: [\n      {\n        path: 'login',\n        component: LoginComponent\n      },\n      {\n        path: 'not-found',\n        component: NotFoundComponent\n      }\n    ]\n  },\n  {\n    path: '**',\n    redirectTo: 'session/not-found'\n  }\n];","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2N1bXVsYXRpdmUtc3VtbWFyeS9jdW11bGF0aXZlLXN1bW1hcnkuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cumulative-summary',\n  templateUrl: './cumulative-summary.component.html',\n  styleUrls: ['./cumulative-summary.component.css']\n})\nexport class CumulativeSummaryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"html {width: 100%;}\\n\\n.row {\\n    padding-top: 30px;\\n    display: -webkit-box;\\n    display: flex;\\n  }\\n\\n/* Create three equal columns that sits next to each other */\\n\\n.column {\\n    -webkit-box-flex: 33.33%;\\n            flex: 33.33%;\\n    padding: 5px;\\n  }\\n\\n.column button{\\n    padding: 3px;\\n  }\\n\\n.row button{\\n    width: 40%;\\n\\n  }\\n\\nbutton{\\n    width: 100%  !important;\\n    font-size: 18px !important;\\n    text-align: center  !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE1BQU0sV0FBVyxDQUFDOztBQUVsQjtJQUNJLGlCQUFpQjtJQUNqQixvQkFBYTtJQUFiLGFBQWE7RUFDZjs7QUFFQSw0REFBNEQ7O0FBQzVEO0lBQ0Usd0JBQVk7WUFBWixZQUFZO0lBQ1osWUFBWTtFQUNkOztBQUVBO0lBQ0UsWUFBWTtFQUNkOztBQUVBO0lBQ0UsVUFBVTs7RUFFWjs7QUFFQTtJQUNFLHVCQUF1QjtJQUN2QiwwQkFBMEI7SUFDMUIsOEJBQThCO0FBQ2xDIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaHRtbCB7d2lkdGg6IDEwMCU7fVxuXG4ucm93IHtcbiAgICBwYWRkaW5nLXRvcDogMzBweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG4gIFxuICAvKiBDcmVhdGUgdGhyZWUgZXF1YWwgY29sdW1ucyB0aGF0IHNpdHMgbmV4dCB0byBlYWNoIG90aGVyICovXG4gIC5jb2x1bW4ge1xuICAgIGZsZXg6IDMzLjMzJTtcbiAgICBwYWRkaW5nOiA1cHg7XG4gIH1cblxuICAuY29sdW1uIGJ1dHRvbntcbiAgICBwYWRkaW5nOiAzcHg7XG4gIH1cblxuICAucm93IGJ1dHRvbntcbiAgICB3aWR0aDogNDAlO1xuXG4gIH1cblxuICBidXR0b257XG4gICAgd2lkdGg6IDEwMCUgICFpbXBvcnRhbnQ7XG4gICAgZm9udC1zaXplOiAxOHB4ICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyICAhaW1wb3J0YW50O1xufSJdfQ== */\"","/**\n * Author: Lea Trueworthy\n * Description: Home page after signed in \n */\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\n\nexport class DashboardComponent implements OnInit {\n\n  presentationName: string;\n\n  constructor(private router: Router, private cookie: CookieService) { }\n\n  goToPresentation(presentationName) {\n    this.presentationName = presentationName;\n    console.log('The presentation name is ' + this.presentationName);\n    this.router.navigate(['/dashboard/slides/' + this.presentationName]);\n  }\n  ngOnInit() {\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","/**\n * Author: Lea Trueworthy\n * Description: Login page\n */\nimport { CookieService } from 'ngx-cookie-service';\nimport { Component, OnInit, NgZone } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  form: FormGroup;\n  errorMessage: string;\n  validEmployeesId: [1007, 1008, 1009, 1010, 1011];\n  cookieValue = \"unknown\";\n  employeeId: any\n\n  constructor(private router: Router, private cookieService: CookieService, private fb: FormBuilder, private http: HttpClient) {\n  }/* this.createForm();\n   }\n   /*createForm() {\n     this.form = this.fb.group({\n       employeeId: [''],\n       \n     });\n   }\n\n   addData(employeeId) {\n     this.ls.addData(employeeId);\n   }*/\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      employeeId: [null, Validators.compose([Validators.required, Validators.pattern('^[0-9]*$')])]\n\n    });\n  }\n\n  login() {\n    const employeeId = this.form.controls['employeeId'].value;\n    console.log(employeeId);\n/*function List($scope, $http){\n  var insertMethod = 'POST';\n  $scope.showLabel = true;\n\n  $scope.save = function(){\n    var formData = {\n      \"employeeId\" : this.employeeId,\n      \n    }\n  };\n  $scope.List();\n}*/\n   \n\n    this.http.get('/api/employees/' + employeeId).subscribe(res => {\n      if (res) {\n        this.cookieService.set('isAuthenticated', 'true', 1);\n        this.cookieService.set('employeeId', employeeId, 1)\n        this.cookieValue = this.cookieService.get('employeeId')\n        //localStorage.setItem('employeeId', JSON.stringify(this.employeeId));\n       // JSON.parse(localStorage.getItem('employeeId'));\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.errorMessage = \"Invalid, please try again.\";\n      }\n    }\n    )\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","/**\n * Author: Lea Trueworthy\n * Description: ts\n */\n\n import { Component, OnInit } from '@angular/core';\n import { ActivatedRoute } from '@angular/router';\n import { Location } from '@angular/common'\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, private location: Location) { }\n\n  ngOnInit() {\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n}\n","module.exports = \"button{\\n    width: 100%  !important;\\n    font-size: 25px !important;\\n    text-align: center  !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJlc2VudGF0aW9uL3ByZXNlbnRhdGlvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksdUJBQXVCO0lBQ3ZCLDBCQUEwQjtJQUMxQiw4QkFBOEI7QUFDbEMiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcmVzZW50YXRpb24vcHJlc2VudGF0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b257XG4gICAgd2lkdGg6IDEwMCUgICFpbXBvcnRhbnQ7XG4gICAgZm9udC1zaXplOiAyNXB4ICFpbXBvcnRhbnQ7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyICAhaW1wb3J0YW50O1xufSJdfQ== */\"","/**\n * Author: Lea Trueworthy\n * Description: carousel function and route to quiz\n */\n\n import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { PresentationService } from './presentation.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-presentation',\n  templateUrl: './presentation.component.html',\n  styleUrls: ['./presentation.component.css']\n})\nexport class PresentationComponent implements OnInit {\n  images: any;\n  presentations: any;\n  presentationName: string;\n  quizId: any;\n  quizName: string;\n\n  constructor(private route: ActivatedRoute, private http: HttpClient,\n              private presentationService: PresentationService, private router: Router,) {\n    this.presentationName = route.snapshot.paramMap.get('name');\n    this.presentationService.getPresentations()\n    .subscribe(res => {\n      this.presentations = res;\n      console.log(this.presentations);\n      this.images = this.presentations.filter(p => p.name === this.presentationName)[0].images;\n      console.log(this.images);\n    })\n  }\n  goToQuiz(quizId) {\n    this.quizId = quizId;\n    console.log(quizId);\n    console.log('Quiz: ' + this.quizId);\n    this.router.navigate(['/dashboard/questions/' + this.quizId]);\n  }\n\n  ngOnInit() {\n\n  }\n\n}","\n/**\n * Author: Lea Trueworthy\n * Description: Presentation guide\n */\n\n import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class PresentationService { \n\n    presentationName: string;\n    presentations: any;\n    images: any;\n\nconstructor(private http: HttpClient) {\n\n  }\n\n  getPresentations() {\n    return this.http.get('./assets/presentations.json');\n  }\n}","module.exports = \"input[type=\\\"radio\\\"]{\\n    vertical-align: top;\\n}\\n\\n#title{\\n    width: 100% !important;\\n    text-align: center !important;\\n    font-size: 30px !important;\\n\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcXVpei9xdWl6LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsNkJBQTZCO0lBQzdCLDBCQUEwQjs7QUFFOUIiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9xdWl6L3F1aXouY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0W3R5cGU9XCJyYWRpb1wiXXtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xufVxuXG4jdGl0bGV7XG4gICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcbiAgICBmb250LXNpemU6IDMwcHggIWltcG9ydGFudDtcblxufSJdfQ== */\"","/**\n * Author: Lea Trueworthy\n * Description: Quiz page guide\n */\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuizService } from './quiz.service';\nimport { filter, map } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Location } from '@angular/common';\nimport { CookieService } from 'ngx-cookie-service';\nimport { error } from 'util';\nimport * as moment from 'moment'\nimport { ResultsComponent } from 'src/app/shared';\n\n@Component({\n  selector: 'app-quiz',\n  templateUrl: './quiz.component.html',\n  styleUrls: ['./quiz.component.css']\n})\nexport class QuizComponent implements OnInit {\n  quizId: string;\n  quizzes: any;\n  quiz: any;\n  questions: any;\n  //quizName: string;\n  answers: string;\n  quizNameFromUrl: string;\n  quizResults: any;\n  q: any = [];\n  qs: any = [];\n  cumulativeSummary: {};\n  quizSummary: {};\n  employeeId: number;\n\n\n  constructor(private route: ActivatedRoute, private cookieService: CookieService, private location: Location, private dialog: MatDialog, private http: HttpClient, private quizService: QuizService, private router: Router) {\n    this.quizId = (this.route.snapshot.paramMap.get('id'))\n    this.quiz = parseInt(this.route.snapshot.paramMap.get(\"id\"))\n    this.employeeId = parseInt(this.cookieService.get('employeeId'))\n    //this.cookieValue = this.cookieService.get('employeeId')\n    console.log(this.employeeId + \" employee number\")\n\n\n\n    //this.employeeId = this.cookieService.get('employeeId');\n\n    //this.employeeId = parseInt(this.cookieService.get('employeeId'), 10);\n\n    this.quizService.getQuizzes().subscribe(res => {\n      this.quizzes = res;\n      this.questions = this.quizzes.filter(q => q.name === this.quizId)[0].questions;\n      //this.quizNameFromUrl = route.snapshot.paramMap.get('id');  quizName: {{this.quizNameFromUrl}}\n\n      console.log(this.quizzes);\n    })\n  }\n  ngOnInit() {\n\n  }\n  onSubmit(form) {\n\n    // score calculator\n    const totalPossiblePoints = 100;\n    this.quiz = this.quizzes.filter(q => q.id === this.quizId);\n    const questionCount = this.quiz.questions;\n    let pointsPerQusetions = totalPossiblePoints / questionCount;\n    let quizScore = 0;\n\n    //determining user's selction\n    let correctRunningTotal = 0;\n    let selectedAnswerIds = [];\n    let selectedisCorrectProp = [];\n    console.log(\"Q: \" + this.questions);\n\n    // FORM\n\n    this.quizResults = form;\n    this.quizResults['employeeId'] = this.employeeId;\n    this.quizResults['quizId'] = this.quizId;\n    console.log('form ' + form);\n\n\n    // save quiz results to database\n    this.http.post('/api/results/', {\n      employeeId: this.employeeId,\n      quizId: this.quizId,\n      results: JSON.stringify(form)\n    }).subscribe(res => {\n    }, err => {\n      console.log(\"POST error\", err);\n\n    }, () => {\n      console.log(\"POST complete\");\n      for (const prop in this.quizResults) {\n        if (this.quizResults.hasOwnProperty(prop)) {\n          if (prop !== 'employeeId' && prop !== 'quizId') {\n            selectedAnswerIds.push(this.quizResults[prop].split(';')[0]);\n            selectedisCorrectProp.push(this.quizResults[prop].split(';')[1]);\n          }\n        }\n\n      }\n    });\n    const dialogRef = this.dialog.open(ResultsComponent, {\n      data: {\n\n      }\n    })\n\n    /* this.quizResults = form;\n     this.quizResults['employeeId'] = this.employeeId; // add the employeeId to the quizResults ojbect\n     console.table(this.quizResults);  //show quiz results\n     alert('Employee: ' + this.employeeId + '\\nQuiz: ' + this.quiz)\n \n     localStorage.setItem('employeeId', '');\n   } }\n   catch (error) {\n     this.http = error;\n   }\n \n   }\n   \n    onSubmit() {\n     alert('Employee: ' + this.employeeId + '\\nQuiz: ' + this.quizId)\n     }*/\n  }\n  goBack() {\n    this.location.back();\n  }\n}","\n/**\n * Author: Lea Trueworthy\n * Description: routing for quiz page to questions\n */\n\n import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class QuizService { \n\n    quizName: string;\n    employeeId: number;\n    quizId: number;\n    quizResults: any;\n    quizzes: any;\n    questions: string;\n    answers: string;\n\n  constructor(private http: HttpClient, private router: Router) {\n  this.quizzes = [\n    { id: 101, name: \"html-css\" },\n    { id: 102, name: \"JavaScript\" },\n    { id: 103, name: \"Node\" }\n  ]\n}\nngOnInit() {\n\n}\n  getQuizzes() {\n    return this.http.get('./assets/questions.json');\n  }\n\n  getQuizbyId(id){\n    return this.http.get('/api/quizzes/' + id);\n  }\n\n  \n  /*\n  user : string;\n\n  goToResults(employeeId) {\n    this.user = employeeId;\n    console.log('user');\n    console.log('Score: ' + this.user);\n    this.router.navigate(['/dashboard/questions/' + this.user]);\n  }*/\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Jlc3VsdHMvcmVzdWx0cy5jb21wb25lbnQuY3NzIn0= */\"","/**\n * Author: Lea Trueworthy\n * Description: employee results from quiz\n */\n\nimport { Component, OnInit, Input } from \"@angular/core\";\nimport { QuizComponent } from \"../quiz/quiz.component\";\nimport { Router } from \"@angular/router\";\nimport { MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: \"app-quiz-results\",\n  templateUrl: \"../results/results.component.html\",\n  styleUrls: [\"../results/results.component.css\"]\n})\nexport class ResultsComponent implements OnInit {\n  employeeId: string;\n\n  // resultsDisplay: any;\n\n  constructor(\n    private dialogRef: MatDialogRef<QuizComponent>, private router: Router, private cookieService: CookieService, ) {\n    this.employeeId = this.cookieService.get('employeeId');\n    console.log(this.employeeId + ' results employee')\n\n  }\n\n  @Input() public quizResults;\n\n  ngOnInit() {\n    console.log(this.quizResults);\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9hdXRoLWxheW91dC9hdXRoLWxheW91dC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth-layout',\n  templateUrl: './auth-layout.component.html',\n  styleUrls: ['./auth-layout.component.css']\n})\nexport class AuthLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9iYXNlLWxheW91dC9iYXNlLWxheW91dC5jb21wb25lbnQuY3NzIn0= */\"","\n/**\n * Author: Lea Trueworthy\n * Description: layout throughtout website\n */\n\n import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-base-layout',\n  templateUrl: './base-layout.component.html',\n  styleUrls: ['./base-layout.component.css']\n})\nexport class BaseLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","/**\n * Author: Lea Trueworthy\n * Description: Validation for login\n */\n\n import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private router: Router, private cookieService: CookieService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n\n    const isAuthenticated = this.cookieService.get('isAuthenticated');\n\n    if (isAuthenticated) {\n      return true;\n    } else {\n      this.router.navigate(['/session/login']);\n      return false;\n    }\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","/**\n * Author: Lea Trueworthy\n * Description: nav\n */\n import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private router: Router, private cookie: CookieService) { }\n  \n  logout() {\n    console.log('You have logged out');\n    this.cookie.delete('isAuthenticated');\n    this.router.navigate([\"/session/login\"]);\n  }\n  ngOnInit() {\n  }\n  navHome() {\n    this.router.navigate([\"/dashboard\"]);\n  }\n}","/**\n * Author: Lea Trueworthy\n * Description: helping in route\n */\n\nexport * from './base-layout/base-layout.component';\nexport * from './auth-layout/auth-layout.component';\nexport * from './../pages/dashboard/dashboard.component';\nexport * from './../pages/login/login.component';\nexport * from './../pages/cumulative-summary/cumulative-summary.component';\nexport * from './../pages/not-found/not-found.component';\nexport * from './../pages/results/results.component';","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9xdWl6LXN1bW1hcnktZGlhbG9nL3F1aXotc3VtbWFyeS1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {CookieService} from \"ngx-cookie-service\";\n@Component({\n  selector: 'app-quiz-summary-dialog',\n  templateUrl: './quiz-summary-dialog.component.html',\n  styleUrls: ['./quiz-summary-dialog.component.css']\n})\nexport class QuizSummaryDialogComponent implements OnInit {\n\n  quizSummary: any;\n  correctAnswers: any;\n  selectedAnswers: any;\n  employeeId: string;\n\n  constructor(private dialogRef: MatDialogRef<QuizSummaryDialogComponent>, \n    @Inject(MAT_DIALOG_DATA) data, private cookieService: CookieService) {\n    this.quizSummary = data.quizSummary;\n    console.log(data);\n    this.correctAnswers = this.quizSummary.correctAnswers;\n    this.selectedAnswers = this.quizSummary.selectedAnswers;\n    this.employeeId = this.cookieService.get('employeeId');\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\n/**\n * Author: Lea Trueworthy\n * Description: main.ts\n */\n\n import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}